"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Address{constructor(t,i,s,e){this.separator="Â»",this.province=t,this.subdistrict=i,this.district=s,this.zipcode=e}setGeo(t,i,s){this.districtCode=t,this.subdistrictCode=i,this.provinceCode=s}addressToString(t){return[this.subdistrict,this.district,this.province,this.zipcode].join(` ${t||this.separator} `)}}const preprocess=t=>{let i=[],s=[];const e=[];let r;return t.lookup&&t.words&&(i=t.lookup.split("|"),s=t.words.split("|"),t=t.data),r=t=>{return"number"==typeof t&&(t=i[t]),t.replace(/[A-Z]/gi,(function(t){const i=t.charCodeAt(0);return s[i<97?i-65:26+i-97]}))},t.map(t=>{let i=1;3===t.length&&(i=2),t[i].map(s=>{s[i].map(o=>{o[i]=o[i]instanceof Array?o[i]:[o[i]],o[i].map(c=>{const n=new Address(r(t[0]),r(s[0]),r(o[0]),c);2===i&&n.setGeo(o[1]||!1,s[1]||!1,t[1]||!1),e.push(n)})})})}),e};class LoadDB{load(t,i,s=!1){let e;e=null==t||void 0===t?"./database/db.json":t;const r=this.loadData(e,i);return"json"===i&&(this.db=s?preprocess(r):r),this.db}loadData(t,i){if("json"===i){return require(t)}throw new Error("This type is not supported!")}}const loadDB=new LoadDB;class AddressService{constructor(){this.multilingual=!1,this.language="en"}loadData(t,i,s=!1,e=!0,r){r&&(this.language=r),this.multilingual=s,this.processedDb=loadDB.load(t,i,e)}query(t){const i={district:t.district?new RegExp(t.district.toString().trim(),"g"):/.*/g,province:t.province?new RegExp(t.province.toString().trim(),"g"):/.*/g,subdistrict:t.subdistrict?new RegExp(t.subdistrict.toString().trim(),"g"):/.*/g,zipcode:t.zipcode?new RegExp(t.zipcode.toString().trim(),"g"):/.*/g};if(this.multilingual)try{return this.processedDb.filter(t=>(t[`province_${this.language}`]||" ").toString().match(i.province)&&(t[`subdistrict_${this.language}`]||" ").toString().match(i.subdistrict)&&(t[`district_${this.language}`]||" ").toString().match(i.district)&&(t.zipcode||" ").toString().match(i.zipcode)).map(t=>({district:t[`district_${this.language}`],province:t[`province_${this.language}`],subdistrict:t[`subdistrict_${this.language}`],zipcode:t.zipcode}))}catch(t){return[]}else try{return this.processedDb.filter(t=>(t.province||" ").toString().match(i.province)&&(t.subdistrict||" ").toString().match(i.subdistrict)&&(t.district||" ").toString().match(i.district)&&(t.zipcode||" ").toString().match(i.zipcode))}catch(t){return[]}}queryByType(t,i){return this.uniq_fast(this.query(t),i)}uniq_fast(t,i){const s={},e=[],r=t.length;let o=0;for(let c=0;c<r;c++){const r=t[c][i];1!==s[r]&&(s[r]=1,e[o++]=t[c][i])}return e}}const addressService=new AddressService;exports.AddressService=AddressService,exports.default=addressService;
